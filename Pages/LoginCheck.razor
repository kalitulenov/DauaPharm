@page "/"
@layout LoginLayout

@using Syncfusion.Blazor
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons
@using DauaPharm.Data
@using DauaPharm.Data.Entities;

@inject NavigationManager NavigationManager
@inject IPharmService PharmService
@inject AppState AppState

<center>
    <div class="col-12 row">
        @*<img src="/img/book_store_logo.jpg" width="400px" height="400px" />*@
        <img src="/img/LogoPharm.png" width="100%" height="50px" />
    </div>
</center>

<div class="login-form">
    <div class='wrap'>
        <div id="heading">Укажите логин и пароль</div>
        <div id="input-container">
            <div class="e-float-input e-input-group">
                <input id="textvalue" type="text" @bind-value="@LogValue" required />
                <span class="e-float-line"></span>
                <label class="e-float-text">Логин</label>
            </div>
            <div class="e-float-input e-input-group">
                <input id="textvalue2" type="password" @bind-value="@PswValue" required />
                <span class="e-float-line"></span>
                <label class="e-float-text">Пароль</label>
            </div>
        </div>

        <div class="button-contain">
            <SfButton @onclick="@OnClicked">ОК</SfButton>
        </div>
    </div>
</div>
<SfDialog IsModal="true" Width="280px" @bind-Visible="@Visibility">
    @*<DialogEvents OnOpen="Validation"></DialogEvents>*@
    <DialogTemplates>
        <Header> Ошибка</Header>
        <Content> Ошибка в логине или в пароле</Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton OnClick="@OnClick">
            <DialogButtonModel Content="OK" IsPrimary="true"></DialogButtonModel>
        </DialogButton>
    </DialogButtons>
</SfDialog>

<style>
    .wrap {
        box-sizing: border-box;
        margin: 0 auto;
        padding: 20px 30px;
        width: 340px;
        background: #f7f7f7;
    }

    #input-container .e-float-input { /* csslint allow: adjoining-classes */
        margin: 15px 0;
    }

    .wrap #input-container .e-control e-btn { /* csslint allow: adjoining-classes */
        margin: 3% 26%;
    }

    .button-contain {
        padding: 20px 0 0;
        width: 100%;
    }

        .button-contain .e-btn { /* csslint allow: adjoining-classes */
            width: 100%;
            height: 36px;
        }

    #heading {
        color: #333;
        font-weight: bold;
        margin: 0 0 15px;
        text-align: center;
        font-size: 20px;
    }

    .login-form {
        width: 340px;
        margin: 50px auto;
    }

    .e-dialog .e-footer-content {
        text-align: center;
    }
</style>

@code {
    public bool Visibility { get; set; } = false;
    private string LogValue { get; set; } = "";
    private string PswValue { get; set; } = "";

    public int BuxFrm { get; set; }
    public int BuxKod { get; set; }

    private void OnClick()
    {
        this.Visibility = false;
    }

    private void OnClicked()
    {
        //this.Visibility = true;
        BeforeOpenEventArgs args = new BeforeOpenEventArgs();
        args.Cancel = false;
        Validation(args);
    }

    private void Validation(BeforeOpenEventArgs args)
    {
        // Create a new, empty Login object
        Login login = new Login();



        if (this.LogValue == "" || this.PswValue == "")
        {
            args.Cancel = true;
        }
        else
    if (this.LogValue.Length < 3)
        {
            args.Cancel = true;
        }
        else
        {

            //string Log, Psw;
            //Log = this.LogValue;
            //Psw = this.PswValue;

            login = PharmService.Pharm_GetLogin(this.LogValue, this.PswValue);
            if (login != null)
            {
                //BuxFrm = login.BuxFrm;
                //BuxKod = login.BuxKod;
                AppState.BuxFrm = login.BuxFrm;
                AppState.BuxKod = login.BuxKod;

                NavigationManager.NavigateTo("/MenuComp");
            }
            else
            {
                args.Cancel = true;
                this.Visibility = true;
                this.StateHasChanged();
            }

        }
    }
}
