@page "/"
@layout LoginLayout

@using Syncfusion.Blazor
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons

@inject NavigationManager NavigationManager

<center>
    <div class="col-12 row">
        @*<img src="/img/book_store_logo.jpg" width="400px" height="400px" />*@
        <img src="/img/LogoPharm.png" width="100%" height="50px" />
    </div>
</center>

<div class="login-form">
    <div class='wrap'>
        <div id="heading">Укажите логин и пароль</div>
        <div id="input-container">
            <div class="e-float-input e-input-group">
                <input id="textvalue" type="text" @bind-value="@LogValue" required />
                <span class="e-float-line"></span>
                <label class="e-float-text">Логин</label>
            </div>
            <div class="e-float-input e-input-group">
                <input id="textvalue2" type="password" @bind-value="@PasValue" required />
                <span class="e-float-line"></span>
                <label class="e-float-text">Пароль</label>
            </div>
        </div>

        <div class="button-contain">
            <SfButton @onclick="@OnClicked">ОК</SfButton>
        </div>
    </div>
</div>
<SfDialog IsModal="true" Width="280px" @bind-Visible="@Visibility">
    <DialogEvents OnOpen="Validation"></DialogEvents>
    <DialogTemplates>
        <Header> Success</Header>
        <Content> Congratulations! Login Success</Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton OnClick="@OnClick">
            <DialogButtonModel Content="Dismiss" IsPrimary="true"></DialogButtonModel>
        </DialogButton>
    </DialogButtons>
</SfDialog>

<style>
    .wrap {
        box-sizing: border-box;
        margin: 0 auto;
        padding: 20px 30px;
        width: 340px;
        background: #f7f7f7;
    }

    #input-container .e-float-input { /* csslint allow: adjoining-classes */
        margin: 17px 0;
    }

    .wrap #input-container .e-control e-btn { /* csslint allow: adjoining-classes */
        margin: 3% 26%;
    }

    .button-contain {
        padding: 20px 0 0;
        width: 100%;
    }

        .button-contain .e-btn { /* csslint allow: adjoining-classes */
            width: 100%;
            height: 36px;
        }

    #heading {
        color: #333;
        font-weight: bold;
        margin: 0 0 15px;
        text-align: center;
        font-size: 20px;
    }

    .login-form {
        width: 340px;
        margin: 50px auto;
    }

    .e-dialog .e-footer-content {
        text-align: center;
    }
</style>

@code {
    public bool Visibility { get; set; } = false;
    private string LogValue { get; set; } = "";
    private string PasValue { get; set; } = "";

    private void OnClick()
    {
        this.Visibility = false;
        //     Console.WriteLine("OnClick");
    }

    private void OnClicked()
    {
        this.Visibility = true;
        //  Console.WriteLine("OnClicked");
    }

    private void Validation(BeforeOpenEventArgs args)
    {
        //  Console.WriteLine("Validation");
        //     Console.WriteLine(args);
        if (this.LogValue == "" && this.PasValue == "")
        {
            args.Cancel = true;
            //         Console.WriteLine("clicked");
        }
        else
        if (this.LogValue == "")
        {
            args.Cancel = true;
            //    Console.WriteLine("Enter the username");
        }
        else
            if (this.PasValue == "")
        {
            args.Cancel = true;
            //     Console.WriteLine("Enter the password");
        }
        else
                if (this.LogValue.Length < 4)
        {
            args.Cancel = true;
            //    Console.WriteLine("Username must be minimum 4 characters");
        }
        else
        {
            args.Cancel = false;
            this.LogValue = "";
            this.PasValue = "";
            this.StateHasChanged();
            //     Console.WriteLine("Validation-End");
            NavigationManager.NavigateTo("/index");
        }

        //SqlConnection myconnection;
        //SqlCommand mycmd;
        //string strSql;
        //SqlDataReader myReader;
        //private void btnLogin_Click(object sender, System.EventArgs e)
        //{
        //    myconnection = new SqlConnection("Server=localhost;uid=sa;password=;database=northwind;");
        //    strSql = "Select * from usertbl where username=" + "’" + txtUserName.Text + "’" + " and userpassword=" + "’" + txtPassword.Text + "’";
        //    mycmd = new SqlCommand(strSql, myconnection);
        //    myconnection.Open();
        //    myReader = mycmd.ExecuteReader(CommandBehavior.CloseConnection);
        //    if (myReader.Read())
        //    {
        //        Response.Write("Welcome");
        //    }
        //    else
        //    {
        //        Response.Write("Access Denied");
        //    }
        //}

    }
}